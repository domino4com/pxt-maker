steps:
  # Initialize and update submodules (pxt-common-packages and pxt)
  - name: 'gcr.io/cloud-builders/git'
    args: ['submodule', 'update', '--init', '--recursive']
    id: 'submodule-init'

  # Run the prune script to remove non-ESP32-S2 boards (like SAMD, NRF, RP2040)
  - name: 'ubuntu'
    script: |
      chmod +x scripts/prune-for-esp32s2.sh
      ./scripts/prune-for-esp32s2.sh
    id: 'prune-boards'

  # Install npm dependencies (toolchain + udev, then npm install)
  - name: 'node:20'
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          build-essential g++ libudev-dev
        export CXXFLAGS="-std=gnu++17"
        npm install --unsafe-perm --no-audit --fund=false
    id: 'npm-install'

  # Build the site/editor:
  # - if package.json defines "build", run it
  # - else, build a static package with PXT (good default for MakeCode targets)
  - name: 'node:20'
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        if npm run | grep -qE ' build( |$)'; then
          npm run build
        else
          npx -y pxt@latest staticpkg
        fi
    id: 'npm-build'

  # Deploy to Firebase Hosting (requires FIREBASE_TOKEN and a matching firebase.json)
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'deploy']
    env:
      - 'FIREBASE_TOKEN=${_FIREBASE_TOKEN}'
    id: 'firebase-deploy'

options:
  machineType: 'E2_HIGHCPU_8' # faster builds
  logging: CLOUD_LOGGING_ONLY
  env:
    - 'FIREBASE_PROJECT=springbot-co-za'

substitutions:
  _FIREBASE_TOKEN: 'your-firebase-token-here' # set in trigger
