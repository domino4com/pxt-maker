# cloudbuild.yaml â€” builds pxt-maker and deploys to Firebase Hosting (no local CLI needed)

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _FIREBASE_PROJECT: springbot-co-za
  _FIREBASE_SITE: springbot          # your desired site id (will be created if missing)
  _GITHUB_ORG: domino4com      # forks live here

steps:
# Clone PXT core + common packages (pxt-maker source is the repo this file lives in)
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/${_GITHUB_ORG}/pxt', 'pxt']
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/${_GITHUB_ORG}/pxt-common-packages', 'pxt-common-packages']

# Build & package static site to ./site
- name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      set -euo pipefail
      npm i -g pxt gulp npx
      (cd pxt && npm ci && npm run build)
      (cd pxt-common-packages && npm ci)
      (cd pxt-maker && npm ci && pxt link ../pxt && pxt link ../pxt-common-packages)
      (cd pxt-maker && pxt staticpkg --githubpages --output ../site)
      # minimal firebase.json telling Hosting to serve ./site
      cat > firebase.json <<'JSON'
      { "hosting": { "public": "site", "ignore": ["firebase.json", "**/.*", "**/node_modules/**"] } }
      JSON

# Ensure Hosting site exists (create if missing), then deploy
- name: 'node:18'
  entrypoint: 'bash'
  secretEnv: ['FIREBASE_TOKEN']
  args:
    - -lc
    - |
      set -euo pipefail
      npx firebase-tools hosting:sites:create "${_FIREBASE_SITE}" --project "${_FIREBASE_PROJECT}" || true
      npx firebase-tools deploy --non-interactive \
        --only hosting \
        --project "${_FIREBASE_PROJECT}" \
        --site "${_FIREBASE_SITE}"

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/FIREBASE_TOKEN/versions/latest
    env: 'FIREBASE_TOKEN'
