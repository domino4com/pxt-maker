# cloudbuild.yaml for building PXT Maker (ESP32-S2 only)

substitutions:
  _FIREBASE_PROJECT: springbot-co-za
  _FIREBASE_SITE: springbot
  _GITHUB_ORG: domino4com

steps:
  # Step 0: Clone pxt
  - name: gcr.io/cloud-builders/git
    args: ["clone", "https://github.com/microsoft/pxt", "pxt"]

  # Step 1: Clone pxt-common-packages
  - name: gcr.io/cloud-builders/git
    args: ["clone", "https://github.com/microsoft/pxt-common-packages", "pxt-common-packages"]

  # Step 2: Build pxt core
  - name: node:18
    entrypoint: bash
    args:
      - -c
      - |
        npm install -g gulp npx
        (cd pxt && npm ci && npm run build)

  # Step 3: Install pxt-common-packages
  - name: node:18
    entrypoint: bash
    args:
      - -c
      - |
        (cd pxt-common-packages && npm ci)

  # Step 4: Install target deps (pxt-maker)
  - name: node:18
    entrypoint: bash
    args:
      - -c
      - |
        apt-get update && apt-get install -y python3 pkg-config build-essential libudev-dev
        (cd pxt-maker && npm ci)

  # Step 5: Prune non-ESP MCUs & connectivity libs
  - name: node:18
    entrypoint: bash
    args:
      - -c
      - |
        chmod +x scripts/prune-for-esp32s2.sh
        ./scripts/prune-for-esp32s2.sh

  # Step 6: Build static site for ESP32-S2
  - name: node:18
    entrypoint: bash
    args:
      - -c
      - |
        (cd pxt-maker && pxt link ../pxt && pxt link ../pxt-common-packages)
        (cd pxt-maker && pxt staticpkg --githubpages --output ../site)

  # Step 7: Create firebase.json for hosting
  - name: bash
    entrypoint: bash
    args:
      - -c
      - |
        cat > firebase.json <<'JSON'
        {
          "hosting": {
            "public": "site",
            "ignore": [
              "firebase.json",
              "**/.*",
              "**/node_modules/**"
            ]
          }
        }
        JSON

  # Step 8: Deploy to Firebase Hosting
  - name: gcr.io/firebase-extensions/firebase-cli
    entrypoint: bash
    args:
      - -c
      - |
        firebase deploy --only hosting --project=${_FIREBASE_PROJECT} --site=${_FIREBASE_SITE}

timeout: "3600s"
