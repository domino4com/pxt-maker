steps:
  # 0) Initialize and update submodules
  - id: submodule-init
    name: gcr.io/cloud-builders/git
    args: ['submodule', 'update', '--init', '--recursive']

  # 1) Prune non-ESP32-S2 boards
  - id: prune-boards
    name: ubuntu
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        chmod +x scripts/prune-for-esp32s2.sh
        ./scripts/prune-for-esp32s2.sh

  # 2) Install deps (toolchain + udev) and npm packages
  - id: npm-install
    name: node:20
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          build-essential g++ libudev-dev
        export CXXFLAGS="-std=gnu++17"
        npm install --unsafe-perm --no-audit --fund=false

  # 3) Build: if a "build" script exists, run it; else PXT target prep + static package
  - id: npm-build
    name: node:20
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        if npm run | grep -qE ' build( |$)'; then
          npm run build
        else
          npx -y pxt@latest update
          npx -y pxt@latest --version
          npx -y pxt@latest staticpkg
        fi

  # 4) Deploy to Firebase Hosting
  - id: firebase-deploy
    name: gcr.io/cloud-builders/npm
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        npm run deploy
    env:
      - 'FIREBASE_TOKEN=${_FIREBASE_TOKEN}'
      - 'FIREBASE_PROJECT=springbot-co-za'

options:
  machineType: E2_HIGHCPU_8
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _FIREBASE_TOKEN: 'your-firebase-token-here'
