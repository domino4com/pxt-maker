# cloudbuild.yaml â€” build pxt-maker (repo root) and deploy to Firebase Hosting

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _FIREBASE_PROJECT: springbot-co-za
  _FIREBASE_SITE: springbot
  _GITHUB_ORG: domino4com

steps:
# Clone PXT core + common packages into /workspace
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/${_GITHUB_ORG}/pxt', 'pxt']

- name: 'gcr.io/cloud-builders/git'
  args: ['clone', 'https://github.com/${_GITHUB_ORG}/pxt-common-packages', 'pxt-common-packages']

# Install global tools once
- name: 'gcr.io/cloud-builders/npm'
  args: ['install', '-g', 'pxt', 'gulp', 'npx']

# Build PXT core
- name: 'gcr.io/cloud-builders/npm'
  dir: 'pxt'
  args: ['ci']

- name: 'gcr.io/cloud-builders/npm'
  dir: 'pxt'
  args: ['run', 'build']

# Install common packages
- name: 'gcr.io/cloud-builders/npm'
  dir: 'pxt-common-packages'
  args: ['ci']

# Install dependencies for your pxt-maker fork (repo root)
- name: 'gcr.io/cloud-builders/npm'
  args: ['ci']

# Link local pxt + common packages into this target
- name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      set -euo pipefail
      pxt link ./pxt
      pxt link ./pxt-common-packages

# Build static package to ./site
- name: 'gcr.io/cloud-builders/npm'
  entrypoint: 'bash'
  args:
    - -lc
    - |
      set -euo pipefail
      pxt staticpkg --githubpages --output ./site
      cat > firebase.json <<'JSON'
      { "hosting": { "public": "site", "ignore": ["firebase.json", "**/.*", "**/node_modules/**"] } }
      JSON

# Ensure Hosting site exists; then deploy using FIREBASE_TOKEN from Secret Manager
- name: 'node:18'
  entrypoint: 'bash'
  secretEnv: ['FIREBASE_TOKEN']
  args:
    - -lc
    - |
      set -euo pipefail
      npx firebase-tools hosting:sites:create "${_FIREBASE_SITE}" --project "${_FIREBASE_PROJECT}" || true
      npx firebase-tools deploy --non-interactive \
        --only hosting \
        --project "${_FIREBASE_PROJECT}" \
        --site "${_FIREBASE_SITE}"

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/FIREBASE_TOKEN/versions/latest
    env: 'FIREBASE_TOKEN'
