timeout: "3600s"

substitutions:
  _FIREBASE_PROJECT: "springbot-co-za"
  _FIREBASE_SITE: "springbot-co-za"
  _REPO_PXT: "https://github.com/domino4com/pxt.git"
  _REPO_PKGS: "https://github.com/domino4com/pxt-common-packages.git"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

steps:
  - id: "Clone pxt"
    name: gcr.io/cloud-builders/git
    entrypoint: bash
    args: [ -lc, 'git clone "${_REPO_PXT}" pxt' ]

  - id: "Clone pxt-common-packages"
    name: gcr.io/cloud-builders/git
    entrypoint: bash
    args: [ -lc, 'git clone "${_REPO_PKGS}" pxt-common-packages' ]

  - id: "Prune to ESP32-S2"
    name: node:18
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        chmod +x scripts/prune-for-esp32s2.sh || true
        ./scripts/prune-for-esp32s2.sh
        rm -rf node_modules package-lock.json || true
        rm -rf pxt/node_modules pxt-common-packages/node_modules || true

  - id: "Install target deps (no scripts)"
    name: node:18
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        npm config set fund false
        npm config set audit false
        npm install --ignore-scripts

  - id: "Link local pxt repos"
    name: node:18
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        npx --yes pxt@0.5.1 link ./pxt
        npx --yes pxt@0.5.1 link ./pxt-common-packages

  - id: "Build static package"
    name: node:18
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        npx --yes pxt@0.5.1 staticpkg

        SRC=""
        if [ -d "docs" ]; then
          SRC="docs"
        elif [ -d "built/packaged" ]; then
          SRC="built/packaged"
        elif [ -d "built/packaged/packaged" ]; then
          SRC="built/packaged/packaged"
        else
          echo "Could not find staticpkg output. Checked: docs, built/packaged[/packaged]." >&2
          exit 2
        fi

        rm -rf hosting
        mkdir -p hosting
        # IMPORTANT: escape Cloud Build substitution so Bash can expand it
        cp -a "$${SRC}/." hosting/

        cat > firebase.json <<'JSON'
        {
          "hosting": {
            "public": "hosting",
            "ignore": ["firebase.json", "**/.*", "**/node_modules/**"]
          }
        }
        JSON

        cat > .firebaserc <<JSON
        {
          "projects": { "default": "${_FIREBASE_PROJECT}" }
        }
        JSON

  - id: "Deploy to Firebase Hosting"
    name: gcr.io/firebase-public/firebase
    entrypoint: bash
    args:
      - -lc
      - |
        set -euxo pipefail
        firebase hosting:sites:list --project "${_FIREBASE_PROJECT}" >/dev/null 2>&1 || true
        firebase deploy \
          --project "${_FIREBASE_PROJECT}" \
          --only hosting \
          --site "${_FIREBASE_SITE}"
