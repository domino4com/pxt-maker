# Cloud Build config for pxt-maker (ESP32-S2 / springbot)
# - Clones pxt and pxt-common-packages
# - Builds pxt core
# - Installs pxt-common-packages
# - Installs target deps
# - Prunes libs for ESP32-S2
# - Links local pxt + pxt-common-packages BEFORE npm install (prevents "Could not remove pxt-core")

timeout: "3600s"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

steps:
# 0) Clone pxt
- id: "Clone pxt"
  name: gcr.io/cloud-builders/git
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail
      git clone https://github.com/domino4com/pxt.git

# 1) Clone pxt-common-packages
- id: "Clone pxt-common-packages"
  name: gcr.io/cloud-builders/git
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail
      git clone https://github.com/domino4com/pxt-common-packages.git

# 2) Build pxt core
- id: "Build pxt core"
  name: node:18
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail
      node -v
      npm -v
      cd pxt
      rm -f package-lock.json
      npm install
      npm run build

# 3) Install pxt-common-packages
- id: "Install pxt-common-packages"
  name: node:18
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail
      cd pxt-common-packages
      rm -f package-lock.json
      npm install

# 4) Install target deps (this repo: pxt-maker)
- id: "Install target deps (pxt-maker)"
  name: node:18
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail
      node -v
      npm -v
      rm -f package-lock.json
      npm install

# 5) Prune for ESP32-S2 (springbot)
- id: "Prune for ESP32-S2 (springbot)"
  name: node:18
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail
      test -f scripts/prune-for-esp32s2.sh
      chmod +x scripts/prune-for-esp32s2.sh
      ./scripts/prune-for-esp32s2.sh

# 6) Link & build target (link FIRST, then install)
- id: "Link & build target"
  name: node:18
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail

      # Clean any stale installs so linking won't try to remove pxt-core
      rm -rf node_modules package-lock.json || true
      rm -rf pxt/node_modules pxt-common-packages/node_modules || true

      # Ensure npx won’t try to install an older global pxt into node_modules
      npm config set fund false
      npm config set audit false

      # Link local pxt and pxt-common-packages into this target
      npx --yes pxt@0.5.1 link ./pxt
      npx --yes pxt@0.5.1 link ./pxt-common-packages

      # Now install the target deps (will respect linked pxt-core)
      npm install

      # Optional: build the target (adjust if you have a specific script)
      # If your target has its own build script, uncomment:
      # npm run build || true

# (Optional) Artifacts — add if you produce a dist folder you want to keep
#artifacts:
#  objects:
#    location: gs://YOUR_BUCKET/pxt-maker/$BUILD_ID/
#    paths:
#      - "built/**"
#      - "docs/**"
#      - "release/**"

# 7) Build a static site and deploy to Firebase Hosting
- id: "Static pkg + Firebase deploy"
  name: node:18
  entrypoint: bash
  args:
    - -lc
    - |
      set -euxo pipefail

      # Build the static site into ./docs (PXT)
      npx --yes pxt@0.5.1 staticpkg --out docs --noMini

      # Install Firebase CLI
      npm install --global --no-audit --no-fund firebase-tools@13

      # Deploy directly to the default Hosting site springbot-co-za
      firebase deploy --only hosting --project springbot-co-za

